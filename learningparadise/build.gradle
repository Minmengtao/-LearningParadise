// buildscript必须在顶部，注意位置
buildscript {
    repositories {
        // 优先使用国内源
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }
    dependencies {
        // 让spring-boot支持gradle
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.1.RELEASE")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

apply plugin: 'java'
apply plugin: 'idea'
// 使用spring boot
apply plugin: "org.springframework.boot"
// 使用spring boot的自动依赖管理
apply plugin: 'io.spring.dependency-management'

group 'com.mmt'
version '1.0-SNAPSHOT'

// 指定java版本
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    // 使用国内的源
    maven { url 'https://maven.aliyun.com/repository/public' }
    mavenCentral()
}

// 依赖列表

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.1'
    compile 'org.webjars:bootstrap:3.3.4'

    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'mysql:mysql-connector-java:5.1.47'

    //implementation 'org.springframework.boot:spring-boot-starter-aop'
    compile "com.alibaba:fastjson:1.2.54"
    compile('org.springframework.boot:spring-boot-starter-data-jpa')

    compile("org.springframework.boot:spring-boot-starter-security")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile("org.springframework.security:spring-security-test")
}

test {
    useJUnitPlatform()
}